(define x 10)

(fn sub-from-one [x y]
    (- 1 x y))

(fn opp [x y]
    (if (= x 5)
        0
        (* x (sub-from-one x y))))

(fn return-name []
    ("Name"))

(fn callback [function should-call] 
    (if should-call 
        (function)
        0))

(define numbers [1 2 3 4 5])

(opp x (nth numbers 4)) 
(callback return-name true)
(opp 5 0)
